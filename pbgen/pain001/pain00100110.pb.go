// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: pain00100110.proto

package pain001

import (
	bah001 "achuala.in/payhub/pbgen/bah001"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DebitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   string            `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	FinInstId string            `protobuf:"bytes,2,opt,name=finInstId,proto3" json:"finInstId,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Amount    float64           `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Tags      map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DebitInfo) Reset() {
	*x = DebitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pain00100110_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitInfo) ProtoMessage() {}

func (x *DebitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pain00100110_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitInfo.ProtoReflect.Descriptor instead.
func (*DebitInfo) Descriptor() ([]byte, []int) {
	return file_pain00100110_proto_rawDescGZIP(), []int{0}
}

func (x *DebitInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *DebitInfo) GetFinInstId() string {
	if x != nil {
		return x.FinInstId
	}
	return ""
}

func (x *DebitInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DebitInfo) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DebitInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreditInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   string            `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	FinInstId string            `protobuf:"bytes,2,opt,name=finInstId,proto3" json:"finInstId,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Amount    float64           `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Tags      map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreditInfo) Reset() {
	*x = CreditInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pain00100110_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditInfo) ProtoMessage() {}

func (x *CreditInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pain00100110_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditInfo.ProtoReflect.Descriptor instead.
func (*CreditInfo) Descriptor() ([]byte, []int) {
	return file_pain00100110_proto_rawDescGZIP(), []int{1}
}

func (x *CreditInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreditInfo) GetFinInstId() string {
	if x != nil {
		return x.FinInstId
	}
	return ""
}

func (x *CreditInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreditInfo) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreditInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type MxPain001Hdr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId   string                 `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	CreDtTm *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creDtTm,proto3" json:"creDtTm,omitempty"`
	NbOfTxs uint32                 `protobuf:"varint,3,opt,name=nbOfTxs,proto3" json:"nbOfTxs,omitempty"`
	CtrlSum float64                `protobuf:"fixed64,4,opt,name=ctrlSum,proto3" json:"ctrlSum,omitempty"`
}

func (x *MxPain001Hdr) Reset() {
	*x = MxPain001Hdr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pain00100110_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MxPain001Hdr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MxPain001Hdr) ProtoMessage() {}

func (x *MxPain001Hdr) ProtoReflect() protoreflect.Message {
	mi := &file_pain00100110_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MxPain001Hdr.ProtoReflect.Descriptor instead.
func (*MxPain001Hdr) Descriptor() ([]byte, []int) {
	return file_pain00100110_proto_rawDescGZIP(), []int{2}
}

func (x *MxPain001Hdr) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *MxPain001Hdr) GetCreDtTm() *timestamppb.Timestamp {
	if x != nil {
		return x.CreDtTm
	}
	return nil
}

func (x *MxPain001Hdr) GetNbOfTxs() uint32 {
	if x != nil {
		return x.NbOfTxs
	}
	return 0
}

func (x *MxPain001Hdr) GetCtrlSum() float64 {
	if x != nil {
		return x.CtrlSum
	}
	return 0
}

type MxPain00100110 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrpHdr                *MxPain001Hdr `protobuf:"bytes,1,opt,name=grpHdr,proto3" json:"grpHdr,omitempty"`
	EndToEndId            string        `protobuf:"bytes,2,opt,name=endToEndId,proto3" json:"endToEndId,omitempty"`
	InitiatingPartyId     string        `protobuf:"bytes,3,opt,name=initiatingPartyId,proto3" json:"initiatingPartyId,omitempty"`
	RequiredExecutionDate string        `protobuf:"bytes,4,opt,name=requiredExecutionDate,proto3" json:"requiredExecutionDate,omitempty"`
	DebitInfo             *DebitInfo    `protobuf:"bytes,5,opt,name=debitInfo,proto3" json:"debitInfo,omitempty"`
	CreditInfo            []*CreditInfo `protobuf:"bytes,6,rep,name=creditInfo,proto3" json:"creditInfo,omitempty"`
}

func (x *MxPain00100110) Reset() {
	*x = MxPain00100110{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pain00100110_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MxPain00100110) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MxPain00100110) ProtoMessage() {}

func (x *MxPain00100110) ProtoReflect() protoreflect.Message {
	mi := &file_pain00100110_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MxPain00100110.ProtoReflect.Descriptor instead.
func (*MxPain00100110) Descriptor() ([]byte, []int) {
	return file_pain00100110_proto_rawDescGZIP(), []int{3}
}

func (x *MxPain00100110) GetGrpHdr() *MxPain001Hdr {
	if x != nil {
		return x.GrpHdr
	}
	return nil
}

func (x *MxPain00100110) GetEndToEndId() string {
	if x != nil {
		return x.EndToEndId
	}
	return ""
}

func (x *MxPain00100110) GetInitiatingPartyId() string {
	if x != nil {
		return x.InitiatingPartyId
	}
	return ""
}

func (x *MxPain00100110) GetRequiredExecutionDate() string {
	if x != nil {
		return x.RequiredExecutionDate
	}
	return ""
}

func (x *MxPain00100110) GetDebitInfo() *DebitInfo {
	if x != nil {
		return x.DebitInfo
	}
	return nil
}

func (x *MxPain00100110) GetCreditInfo() []*CreditInfo {
	if x != nil {
		return x.CreditInfo
	}
	return nil
}

type CustomerCreditTransferInitiationRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *bah001.MxBah00100102 `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   *MxPain00100110       `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CustomerCreditTransferInitiationRq) Reset() {
	*x = CustomerCreditTransferInitiationRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pain00100110_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerCreditTransferInitiationRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerCreditTransferInitiationRq) ProtoMessage() {}

func (x *CustomerCreditTransferInitiationRq) ProtoReflect() protoreflect.Message {
	mi := &file_pain00100110_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerCreditTransferInitiationRq.ProtoReflect.Descriptor instead.
func (*CustomerCreditTransferInitiationRq) Descriptor() ([]byte, []int) {
	return file_pain00100110_proto_rawDescGZIP(), []int{4}
}

func (x *CustomerCreditTransferInitiationRq) GetHeader() *bah001.MxBah00100102 {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CustomerCreditTransferInitiationRq) GetBody() *MxPain00100110 {
	if x != nil {
		return x.Body
	}
	return nil
}

type CustomerCreditTransferInitiationRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PauhubId string `protobuf:"bytes,2,opt,name=pauhub_id,json=pauhubId,proto3" json:"pauhub_id,omitempty"`
}

func (x *CustomerCreditTransferInitiationRs) Reset() {
	*x = CustomerCreditTransferInitiationRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pain00100110_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerCreditTransferInitiationRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerCreditTransferInitiationRs) ProtoMessage() {}

func (x *CustomerCreditTransferInitiationRs) ProtoReflect() protoreflect.Message {
	mi := &file_pain00100110_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerCreditTransferInitiationRs.ProtoReflect.Descriptor instead.
func (*CustomerCreditTransferInitiationRs) Descriptor() ([]byte, []int) {
	return file_pain00100110_proto_rawDescGZIP(), []int{5}
}

func (x *CustomerCreditTransferInitiationRs) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CustomerCreditTransferInitiationRs) GetPauhubId() string {
	if x != nil {
		return x.PauhubId
	}
	return ""
}

var File_pain00100110_proto protoreflect.FileDescriptor

var file_pain00100110_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x30, 0x30, 0x31, 0x31, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x62, 0x61, 0x68, 0x30, 0x30, 0x31, 0x30, 0x30, 0x31, 0x30, 0x32, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x02, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42,
	0x0e, 0xfa, 0x42, 0x0b, 0x12, 0x09, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x2e,
	0x44, 0x65, 0x62, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8d, 0x02, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x20, 0x01, 0x28, 0x23, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0e,
	0xfa, 0x42, 0x0b, 0x12, 0x09, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x4d, 0x78, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31,
	0x48, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x44, 0x74, 0x54, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x44, 0x74, 0x54, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x62, 0x4f,
	0x66, 0x54, 0x78, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x62, 0x4f, 0x66,
	0x54, 0x78, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x74, 0x72, 0x6c, 0x53, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x74, 0x72, 0x6c, 0x53, 0x75, 0x6d, 0x22, 0xd3, 0x02,
	0x0a, 0x0e, 0x4d, 0x78, 0x50, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x30, 0x30, 0x31, 0x31, 0x30,
	0x12, 0x2d, 0x0a, 0x06, 0x67, 0x72, 0x70, 0x48, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x2e, 0x4d, 0x78, 0x50, 0x61, 0x69,
	0x6e, 0x30, 0x30, 0x31, 0x48, 0x64, 0x72, 0x52, 0x06, 0x67, 0x72, 0x70, 0x48, 0x64, 0x72, 0x12,
	0x28, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0a, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x45, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x11, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52,
	0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x69,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61,
	0x69, 0x6e, 0x30, 0x30, 0x31, 0x2e, 0x44, 0x65, 0x62, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x69, 0x6e, 0x30,
	0x30, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x22, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x12, 0x37, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x68,
	0x30, 0x30, 0x31, 0x2e, 0x4d, 0x78, 0x42, 0x61, 0x68, 0x30, 0x30, 0x31, 0x30, 0x30, 0x31, 0x30,
	0x32, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x2e, 0x4d, 0x78, 0x50, 0x61,
	0x69, 0x6e, 0x30, 0x30, 0x31, 0x30, 0x30, 0x31, 0x31, 0x30, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x59, 0x0a, 0x22, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x75, 0x68,
	0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x75,
	0x68, 0x75, 0x62, 0x49, 0x64, 0x42, 0x29, 0x5a, 0x27, 0x61, 0x63, 0x68, 0x75, 0x61, 0x6c, 0x61,
	0x2e, 0x69, 0x6e, 0x2f, 0x70, 0x61, 0x79, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x62, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31, 0x3b, 0x70, 0x61, 0x69, 0x6e, 0x30, 0x30, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pain00100110_proto_rawDescOnce sync.Once
	file_pain00100110_proto_rawDescData = file_pain00100110_proto_rawDesc
)

func file_pain00100110_proto_rawDescGZIP() []byte {
	file_pain00100110_proto_rawDescOnce.Do(func() {
		file_pain00100110_proto_rawDescData = protoimpl.X.CompressGZIP(file_pain00100110_proto_rawDescData)
	})
	return file_pain00100110_proto_rawDescData
}

var file_pain00100110_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pain00100110_proto_goTypes = []interface{}{
	(*DebitInfo)(nil),                          // 0: pain001.DebitInfo
	(*CreditInfo)(nil),                         // 1: pain001.CreditInfo
	(*MxPain001Hdr)(nil),                       // 2: pain001.MxPain001Hdr
	(*MxPain00100110)(nil),                     // 3: pain001.MxPain00100110
	(*CustomerCreditTransferInitiationRq)(nil), // 4: pain001.CustomerCreditTransferInitiationRq
	(*CustomerCreditTransferInitiationRs)(nil), // 5: pain001.CustomerCreditTransferInitiationRs
	nil,                           // 6: pain001.DebitInfo.TagsEntry
	nil,                           // 7: pain001.CreditInfo.TagsEntry
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*bah001.MxBah00100102)(nil),  // 9: bah001.MxBah00100102
}
var file_pain00100110_proto_depIdxs = []int32{
	6, // 0: pain001.DebitInfo.tags:type_name -> pain001.DebitInfo.TagsEntry
	7, // 1: pain001.CreditInfo.tags:type_name -> pain001.CreditInfo.TagsEntry
	8, // 2: pain001.MxPain001Hdr.creDtTm:type_name -> google.protobuf.Timestamp
	2, // 3: pain001.MxPain00100110.grpHdr:type_name -> pain001.MxPain001Hdr
	0, // 4: pain001.MxPain00100110.debitInfo:type_name -> pain001.DebitInfo
	1, // 5: pain001.MxPain00100110.creditInfo:type_name -> pain001.CreditInfo
	9, // 6: pain001.CustomerCreditTransferInitiationRq.header:type_name -> bah001.MxBah00100102
	3, // 7: pain001.CustomerCreditTransferInitiationRq.body:type_name -> pain001.MxPain00100110
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pain00100110_proto_init() }
func file_pain00100110_proto_init() {
	if File_pain00100110_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pain00100110_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pain00100110_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pain00100110_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MxPain001Hdr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pain00100110_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MxPain00100110); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pain00100110_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerCreditTransferInitiationRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pain00100110_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerCreditTransferInitiationRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pain00100110_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pain00100110_proto_goTypes,
		DependencyIndexes: file_pain00100110_proto_depIdxs,
		MessageInfos:      file_pain00100110_proto_msgTypes,
	}.Build()
	File_pain00100110_proto = out.File
	file_pain00100110_proto_rawDesc = nil
	file_pain00100110_proto_goTypes = nil
	file_pain00100110_proto_depIdxs = nil
}

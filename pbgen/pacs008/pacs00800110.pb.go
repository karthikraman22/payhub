// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: pacs00800110.proto

package pacs008

import (
	bah001 "achuala.in/payhub/pbgen/bah001"
	common "achuala.in/payhub/pbgen/common"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DebitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string            `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FinInstId string            `protobuf:"bytes,2,opt,name=fin_inst_id,json=finInstId,proto3" json:"fin_inst_id,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Amount    *common.Money     `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Tags      map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DebitInfo) Reset() {
	*x = DebitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacs00800110_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitInfo) ProtoMessage() {}

func (x *DebitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pacs00800110_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitInfo.ProtoReflect.Descriptor instead.
func (*DebitInfo) Descriptor() ([]byte, []int) {
	return file_pacs00800110_proto_rawDescGZIP(), []int{0}
}

func (x *DebitInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DebitInfo) GetFinInstId() string {
	if x != nil {
		return x.FinInstId
	}
	return ""
}

func (x *DebitInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DebitInfo) GetAmount() *common.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *DebitInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreditInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string            `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FinInstId string            `protobuf:"bytes,2,opt,name=fin_inst_id,json=finInstId,proto3" json:"fin_inst_id,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Amount    *common.Money     `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Tags      map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreditInfo) Reset() {
	*x = CreditInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacs00800110_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditInfo) ProtoMessage() {}

func (x *CreditInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pacs00800110_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditInfo.ProtoReflect.Descriptor instead.
func (*CreditInfo) Descriptor() ([]byte, []int) {
	return file_pacs00800110_proto_rawDescGZIP(), []int{1}
}

func (x *CreditInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditInfo) GetFinInstId() string {
	if x != nil {
		return x.FinInstId
	}
	return ""
}

func (x *CreditInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreditInfo) GetAmount() *common.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *CreditInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GroupHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId                 string                 `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	CreatedDatetime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_datetime,json=createdDatetime,proto3" json:"created_datetime,omitempty"`
	NumberOfTxns          uint32                 `protobuf:"varint,3,opt,name=number_of_txns,json=numberOfTxns,proto3" json:"number_of_txns,omitempty"`
	TotalSettlementAmount *common.Money          `protobuf:"bytes,4,opt,name=total_settlement_amount,json=totalSettlementAmount,proto3" json:"total_settlement_amount,omitempty"`
	SettlementMethod      string                 `protobuf:"bytes,5,opt,name=settlement_method,json=settlementMethod,proto3" json:"settlement_method,omitempty"`
}

func (x *GroupHeader) Reset() {
	*x = GroupHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacs00800110_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupHeader) ProtoMessage() {}

func (x *GroupHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pacs00800110_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupHeader.ProtoReflect.Descriptor instead.
func (*GroupHeader) Descriptor() ([]byte, []int) {
	return file_pacs00800110_proto_rawDescGZIP(), []int{2}
}

func (x *GroupHeader) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *GroupHeader) GetCreatedDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDatetime
	}
	return nil
}

func (x *GroupHeader) GetNumberOfTxns() uint32 {
	if x != nil {
		return x.NumberOfTxns
	}
	return 0
}

func (x *GroupHeader) GetTotalSettlementAmount() *common.Money {
	if x != nil {
		return x.TotalSettlementAmount
	}
	return nil
}

func (x *GroupHeader) GetSettlementMethod() string {
	if x != nil {
		return x.SettlementMethod
	}
	return ""
}

type CreditTransferInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupHeader      *GroupHeader                   `protobuf:"bytes,1,opt,name=group_header,json=groupHeader,proto3" json:"group_header,omitempty"`
	PaymentId        *common.PaymentIdentification  `protobuf:"bytes,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	PaymentType      *common.PaymentTypeInformation `protobuf:"bytes,3,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	SettlementAmount *common.Money                  `protobuf:"bytes,4,opt,name=settlement_amount,json=settlementAmount,proto3" json:"settlement_amount,omitempty"`
	DebitInfo        *DebitInfo                     `protobuf:"bytes,5,opt,name=debitInfo,proto3" json:"debitInfo,omitempty"`
	CreditInfo       []*CreditInfo                  `protobuf:"bytes,6,rep,name=creditInfo,proto3" json:"creditInfo,omitempty"`
}

func (x *CreditTransferInformation) Reset() {
	*x = CreditTransferInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacs00800110_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditTransferInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditTransferInformation) ProtoMessage() {}

func (x *CreditTransferInformation) ProtoReflect() protoreflect.Message {
	mi := &file_pacs00800110_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditTransferInformation.ProtoReflect.Descriptor instead.
func (*CreditTransferInformation) Descriptor() ([]byte, []int) {
	return file_pacs00800110_proto_rawDescGZIP(), []int{3}
}

func (x *CreditTransferInformation) GetGroupHeader() *GroupHeader {
	if x != nil {
		return x.GroupHeader
	}
	return nil
}

func (x *CreditTransferInformation) GetPaymentId() *common.PaymentIdentification {
	if x != nil {
		return x.PaymentId
	}
	return nil
}

func (x *CreditTransferInformation) GetPaymentType() *common.PaymentTypeInformation {
	if x != nil {
		return x.PaymentType
	}
	return nil
}

func (x *CreditTransferInformation) GetSettlementAmount() *common.Money {
	if x != nil {
		return x.SettlementAmount
	}
	return nil
}

func (x *CreditTransferInformation) GetDebitInfo() *DebitInfo {
	if x != nil {
		return x.DebitInfo
	}
	return nil
}

func (x *CreditTransferInformation) GetCreditInfo() []*CreditInfo {
	if x != nil {
		return x.CreditInfo
	}
	return nil
}

type MxPacs00800110 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionCode string                     `protobuf:"bytes,1,opt,name=function_code,json=functionCode,proto3" json:"function_code,omitempty"`
	Header       *bah001.MxBah00100102      `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body         *CreditTransferInformation `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *MxPacs00800110) Reset() {
	*x = MxPacs00800110{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pacs00800110_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MxPacs00800110) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MxPacs00800110) ProtoMessage() {}

func (x *MxPacs00800110) ProtoReflect() protoreflect.Message {
	mi := &file_pacs00800110_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MxPacs00800110.ProtoReflect.Descriptor instead.
func (*MxPacs00800110) Descriptor() ([]byte, []int) {
	return file_pacs00800110_proto_rawDescGZIP(), []int{4}
}

func (x *MxPacs00800110) GetFunctionCode() string {
	if x != nil {
		return x.FunctionCode
	}
	return ""
}

func (x *MxPacs00800110) GetHeader() *bah001.MxBah00100102 {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *MxPacs00800110) GetBody() *CreditTransferInformation {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_pacs00800110_proto protoreflect.FileDescriptor

var file_pacs00800110_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x30, 0x30, 0x31, 0x31, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x62, 0x61, 0x68, 0x30, 0x30, 0x31, 0x30, 0x30, 0x31, 0x30, 0x32, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9b, 0x02, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x28, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x2e, 0x44, 0x65,
	0x62, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9d, 0x02, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x28, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x23, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x99, 0x02, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x4f, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x74, 0x78, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x54, 0x78, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xaa, 0x03, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0c, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x10, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a,
	0x0a, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x2e, 0x44, 0x65, 0x62, 0x69,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x4d, 0x78,
	0x50, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x30, 0x30, 0x31, 0x31, 0x30, 0x12, 0x3d, 0x0a, 0x0d,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x18, 0xfa, 0x42, 0x15, 0x72, 0x13, 0x0a, 0x11, 0x46, 0x49, 0x54, 0x6f,
	0x46, 0x49, 0x43, 0x73, 0x74, 0x6d, 0x72, 0x43, 0x64, 0x74, 0x54, 0x72, 0x66, 0x52, 0x0c, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61,
	0x68, 0x30, 0x30, 0x31, 0x2e, 0x4d, 0x78, 0x42, 0x61, 0x68, 0x30, 0x30, 0x31, 0x30, 0x30, 0x31,
	0x30, 0x32, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x29, 0x5a, 0x27, 0x61, 0x63, 0x68, 0x75, 0x61, 0x6c,
	0x61, 0x2e, 0x69, 0x6e, 0x2f, 0x70, 0x61, 0x79, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x62, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30, 0x38, 0x3b, 0x70, 0x61, 0x63, 0x73, 0x30, 0x30,
	0x38, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pacs00800110_proto_rawDescOnce sync.Once
	file_pacs00800110_proto_rawDescData = file_pacs00800110_proto_rawDesc
)

func file_pacs00800110_proto_rawDescGZIP() []byte {
	file_pacs00800110_proto_rawDescOnce.Do(func() {
		file_pacs00800110_proto_rawDescData = protoimpl.X.CompressGZIP(file_pacs00800110_proto_rawDescData)
	})
	return file_pacs00800110_proto_rawDescData
}

var file_pacs00800110_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pacs00800110_proto_goTypes = []interface{}{
	(*DebitInfo)(nil),                     // 0: pacs008.DebitInfo
	(*CreditInfo)(nil),                    // 1: pacs008.CreditInfo
	(*GroupHeader)(nil),                   // 2: pacs008.GroupHeader
	(*CreditTransferInformation)(nil),     // 3: pacs008.CreditTransferInformation
	(*MxPacs00800110)(nil),                // 4: pacs008.MxPacs00800110
	nil,                                   // 5: pacs008.DebitInfo.TagsEntry
	nil,                                   // 6: pacs008.CreditInfo.TagsEntry
	(*common.Money)(nil),                  // 7: common.Money
	(*timestamppb.Timestamp)(nil),         // 8: google.protobuf.Timestamp
	(*common.PaymentIdentification)(nil),  // 9: common.PaymentIdentification
	(*common.PaymentTypeInformation)(nil), // 10: common.PaymentTypeInformation
	(*bah001.MxBah00100102)(nil),          // 11: bah001.MxBah00100102
}
var file_pacs00800110_proto_depIdxs = []int32{
	7,  // 0: pacs008.DebitInfo.amount:type_name -> common.Money
	5,  // 1: pacs008.DebitInfo.tags:type_name -> pacs008.DebitInfo.TagsEntry
	7,  // 2: pacs008.CreditInfo.amount:type_name -> common.Money
	6,  // 3: pacs008.CreditInfo.tags:type_name -> pacs008.CreditInfo.TagsEntry
	8,  // 4: pacs008.GroupHeader.created_datetime:type_name -> google.protobuf.Timestamp
	7,  // 5: pacs008.GroupHeader.total_settlement_amount:type_name -> common.Money
	2,  // 6: pacs008.CreditTransferInformation.group_header:type_name -> pacs008.GroupHeader
	9,  // 7: pacs008.CreditTransferInformation.payment_id:type_name -> common.PaymentIdentification
	10, // 8: pacs008.CreditTransferInformation.payment_type:type_name -> common.PaymentTypeInformation
	7,  // 9: pacs008.CreditTransferInformation.settlement_amount:type_name -> common.Money
	0,  // 10: pacs008.CreditTransferInformation.debitInfo:type_name -> pacs008.DebitInfo
	1,  // 11: pacs008.CreditTransferInformation.creditInfo:type_name -> pacs008.CreditInfo
	11, // 12: pacs008.MxPacs00800110.header:type_name -> bah001.MxBah00100102
	3,  // 13: pacs008.MxPacs00800110.body:type_name -> pacs008.CreditTransferInformation
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pacs00800110_proto_init() }
func file_pacs00800110_proto_init() {
	if File_pacs00800110_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pacs00800110_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacs00800110_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacs00800110_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacs00800110_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditTransferInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pacs00800110_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MxPacs00800110); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pacs00800110_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pacs00800110_proto_goTypes,
		DependencyIndexes: file_pacs00800110_proto_depIdxs,
		MessageInfos:      file_pacs00800110_proto_msgTypes,
	}.Build()
	File_pacs00800110_proto = out.File
	file_pacs00800110_proto_rawDesc = nil
	file_pacs00800110_proto_goTypes = nil
	file_pacs00800110_proto_depIdxs = nil
}
